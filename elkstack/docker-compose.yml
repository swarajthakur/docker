version: '2.1'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]
      
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      elasticsearch:  { condition: service_healthy } 

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      elasticsearch:  { condition: service_healthy }
      
  #Apache2 container
  apache2:
    container_name: apache2
    hostname: apache2
    build:
      context: apache2/
    networks:
      - elk
    #Expose port 80 as port 800 to allow users to hit content and generate data for filebeat and packetbeat
    ports: ['8000:80']
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Apache module
      - ./apache2/logs/apache2/:/var/log/apache2/
    
  metricbeat:
    build:
      context: beats/metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    user: root
    volumes:
      - ./beats/metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
    networks:
      - elk
    depends_on:
      elasticsearch:  { condition: service_healthy }

networks:
  elk:
    driver: bridge
